---
- name: "aws : provision : Create VPC {{ libre_session.id }}-vpc in {{ libre_infra.ec2.region }}"
  ec2_vpc_net:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    name: "{{ libre_session.id }}-vpc"
    cidr_block: 172.22.0.0/16
    region: "{{ libre_infra.ec2.region }}"
    tags:
      Name: "{{ libre_session.id }}-vpc"
      Project: "{{ libre_session.course }}"
      Stage: "{{ libre_session.state }}"
      Instructor: "{{ session.instructor }}"
  register: libre_vpc
- name: "aws : provision : Create classroom subnet in {{ libre_session.id }}-vpc"
  ec2_vpc_subnet:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    vpc_id: "{{ libre_vpc.vpc.id }}"
    cidr: 172.22.1.0/24
    az: "{{ libre_infra.ec2.region }}b"
    region: "{{ libre_infra.ec2.region }}"
    tags:
      Name: "{{ libre_session.id }}-subnet-classroom"
      Project: "{{ libre_session.course }}"
      Stage: "{{ libre_session.state }}"
      Instructor: "{{ session.instructor }}"
  register: classroom_subnet
  when: libre_vpc.vpc.id is defined
- name: "aws : provision : Create Internet Gateway in {{ libre_session.id }}-vpc"
  ec2_vpc_igw:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    vpc_id: "{{ libre_vpc.vpc.id }}"
    region: "{{ libre_infra.ec2.region }}"
    tags:
      Name: "{{ libre_session.id }}-igw"
      Project: "{{ libre_session.course }}"
      Stage: "{{ libre_session.state }}"
      Instructor: "{{ session.instructor }}"
  register: igw
  when: libre_vpc.vpc.id is defined
- name: "aws : provision : Create public route table to classroom subnet in {{ libre_session.id }}-vpc"
  ec2_vpc_route_table:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    vpc_id: "{{ libre_vpc.vpc.id }}"
    region: "{{ libre_infra.ec2.region }}"
    tags:
      Name: "{{ libre_session.id }}-route-public"
      Project: "{{ libre_session.course }}"
      Stage: "{{ libre_session.state }}"
      Instructor: "{{ session.instructor }}"
    subnets:
      - "{{ classroom_subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
  register: public_route_table
  when: libre_vpc.vpc.id is defined
- name: "aws : provision : Create security group for {{ libre_vpc.vpc.id }} in {{ libre_infra.ec2.region }}"
  ec2_group:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    vpc_id: "{{ libre_vpc.vpc.id }}"
    region: "{{ libre_infra.ec2.region }}"
    name: openAll
    description: security group for {{ libre_session.course }}
    tags:
      Name: "{{ libre_session.id }}-sg-all"
      Project: "{{ libre_session.course }}"
      Stage: "{{ libre_session.state }}"
      Instructor: "{{ session.instructor }}"
    rules:
      - proto: all
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
  register: security_group
  when: libre_vpc.vpc.id is defined
- name: "aws : provision : Create ec2 instance in {{ libre_infra.ec2.region }}"
  ec2:
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    region: "{{ libre_infra.ec2.region }}"
    instance_type: "{{ libre_infra.ec2.type }}"
    image: "{{ libre_infra.ec2.image }}"
    key_name: "{{ libre_infra.ssh.keyname }}"
    group_id: "{{ security_group.group_id }}"
    vpc_subnet_id: "{{ classroom_subnet.subnet.id }}"
    assign_public_ip: yes
    exact_count: "{{ libre_infra.ec2.instance_nb }}"
    count_tag: Name
    wait: yes
    wait_timeout: 60
    instance_tags:
      Name: "{{ libre_session.id }}-workstation"
      Project: "{{ libre_session.course }}"
      Stage: "{{ libre_session.state }}"
      Instructor: "{{ session.instructor }}"
    volumes:
      - device_name: /dev/xvda
        volume_type: gp2
        volume_size: 8
        delete_on_termination: true
      - device_name: /dev/sdb
        volume_type: io1
        iops: 100
        volume_size: 10
        delete_on_termination: true
  register: ec2
#- name: "aws : provision : Information about instances"
#  debug:
#    msg: "Instance {{ item.id }} created with ip {{ item.public_ip }}"
#  with_items: "{{ ec2.tagged_instances }}"
- name: "aws : provision : Register a public DNS for workstations"
  route53:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    zone: "{{ libre_infra.route53.zone }}"
    record: "workstation{{item.0}}.{{ libre_session.course }}.{{ libre_infra.route53.domain }}"
    type: A
    ttl: 30
    overwrite: yes
    value: "{{ item.1.public_ip }}"
#    wait: yes
  register: route53_workstation
  with_indexed_items: "{{ ec2.tagged_instances }}"
- name: "aws : provision : Register a public DNS for instructor"
  route53:
    state: present
    aws_access_key: "{{ libre_infra.auth.access_key }}"
    aws_secret_key: "{{ libre_infra.auth.secret_key }}"
    zone: "{{ libre_infra.route53.zone }}"
    record: "instructor.{{ libre_session.course }}.{{ libre_infra.route53.domain }}"
    type: CNAME
    ttl: 30
    overwrite: yes
    value: "workstation0.{{ libre_session.course }}.{{ libre_infra.route53.domain }}"
#    wait: yes
  register: route53_instructor
- name: "aws : provision : Generate instructor inventory {{config_libre.directory.conf}}/inventory/instructor.yml"
  template:
    src: "templates/inventory-instructor.j2"
    dest: "{{config_libre.directory.conf}}/inventory/instructor.yml"
    mode: 0664
    owner: "{{ r_libre_user }}"
    group: "{{ r_libre_group }}"
- name: "aws : provision : Generate students inventory {{config_libre.directory.conf}}/inventory/students.yml"
  template:
    src: "templates/inventory-students.j2"
    dest: "{{config_libre.directory.conf}}/inventory/students.yml"
    mode: 0664
    owner: "{{ r_libre_user }}"
    group: "{{ r_libre_group }}"
- name: "aws : provision : Wait for the instances to boot by checking the ssh port"
  wait_for:
    host: "{{item.public_ip}}"
    port: 22
    delay: 10
    sleep: 5
    timeout: 60
    state: started
  with_items: "{{ ec2.tagged_instances }}"
- name: "aws : provision : Get previous report data"
  set_fact:
    previous_report: "{{ lookup('file', r_libre_tmp + '/' + r_libre_tmpfile) | default('') }}"
  delegate_to: localhost
- name: "aws : provision : Generate LIBRE report at {{ r_libre_tmp }}/{{ r_libre_tmpfile }}"
  template:
    src: templates/libre_report-provision.j2
    dest: "{{ r_libre_tmp }}/{{ r_libre_tmpfile }}"
    mode: 0664
  delegate_to: localhost
- name: "infra : aws : provision : Log provision action"
  include_role:
    name: libre
    tasks_from: lib/log
  vars:
    log_name: "AWS infrastructure is Provisionned"
    log_component: infra-aws
    log_action: provision
- name: "aws : provision : Infrastructure provisionning is finish"
  debug:
    msg:
      - " "
      - "We are happy to report that classroom infrastructure {{ libre_session.course }}.{{ libre_infra.route53.domain }} was successfully provisioned on AWS infrastructure"
      - " "
      - "Here are some interesting characteristics of this classroom infrastructure:"
      - " "
      - "  - Instructor: instructor.{{ libre_session.course }}.{{ libre_infra.route53.domain }}"
      - "  - IP address: {{ ec2.tagged_instances[0].public_ip }}"
      - "  - Type: {{ libre_infra.ec2.type }}"
      - "  - Region: {{ libre_infra.ec2.region }}"
      - "  - SSH User: {{ libre_infra.ssh.user }}"
      - "  - SSH Key: {{ libre_infra.ssh.keyname }}.pem"
      - "  - Size: {{ libre_infra.ec2.instance_nb }} workstations"
      - " "
      - "You must finish your installation by running the following command :"
      - "  ansible-playbook -i /usr/share/libre/conf/inventory playbooks/infra-aws/provision-post.yml"
      - " "
      - " Have a happy setup ;)"
#- name: "provision : Send a mail for notification"
#  mail:
##     from: cl@startx.fr
#    to: cl@startx.fr
#    subject: "Classroom {{ libre_session.course }}.{{ libre_infra.route53.domain }} has been provisioned"
#    body: |
#      We are happy to report that classroom infrastructure {{ libre_session.course }}.{{ libre_infra.route53.domain }} was successfully provisioned on AWS infrastructure
#
#      Here are some interesting characteristics of this classroom infrastructure:
#
#        - Instructor: instructor.{{ libre_session.course }}.{{ libre_infra.route53.domain }}
#        - IP address: {{ ec2.tagged_instances[0].public_ip }}
#        - Type: {{ libre_infra.ec2.type }}
#        - Region: {{ libre_infra.ec2.region }}
#        - SSH User: {{ libre_infra.ssh.user }}
#        - SSH Key: {{ libre_infra.ssh.keyname }}.pem
#        - Size: {{ libre_infra.ec2.instance_nb }} workstations
#
#     You must finish your installation by running the following command :
#       ansible-playbook -i /usr/share/libre/conf/inventory playbooks/infra-aws/provision-post.yml
#
#     Have a happy setup ;)

